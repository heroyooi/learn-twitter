{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","prev","onSubmit","event","preventDefault","update","className","type","placeholder","value","required","autoFocus","onChange","target","onClick","src","alt","icon","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8ad998e.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              autoFocus\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} alt=\"\" />\r\n          )}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n            alt=\"\"\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService\r\n      .collection(\"nweets\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        const nweetArray = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setNweets(nweetArray);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst inputStyles = {};\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign in\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          autoFocus\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          displayName: user.displayName,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args),\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <AppRouter\r\n          isLoggedIn={Boolean(userObj)}\r\n          userObj={userObj}\r\n          refreshUser={refreshUser}\r\n        />\r\n      ) : (\r\n        \"Initializing....\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}